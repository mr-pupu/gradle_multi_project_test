dependencies {
    compile project(':common')
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.22'
    compile("com.jolbox:bonecp:0.8.0.RELEASE") {
        exclude group: 'com.google.guava'
    }
    compile group: 'com.google.guava', name: 'guava', version: '15.0'
    compile group: 'org.springframework', name: 'spring-core', version: "${rootProject.ext.springVersion}"
    compile group: 'org.springframework', name: 'spring-orm', version: "${rootProject.ext.springVersion}"
    compile group: 'org.springframework', name: 'spring-tx', version: "${rootProject.ext.springVersion}"
    compile group: 'org.springframework', name: 'spring-context', version: "${rootProject.ext.springVersion}"
    compile group: 'org.springframework', name: 'spring-context-support', version: "${rootProject.ext.springVersion}"

    compile group: 'org.hibernate', name: 'hibernate-core', version: '4.1.10.Final'
    compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.0-api', version: '1.0.1. Final'
    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: '4.1.10.Final'
    compile group: 'org.hibernate', name: 'hibernate-validator', version: '4.3.1.Final'

    compile group: 'org.springframework.data', name: 'spring-data-jpa', version: '1.4.2.RELEASE'

    def queryDSL = '3.2.4'
    compile("com.mysema.querydsl:querydsl-core:$queryDSL")
    compile("com.mysema.querydsl:querydsl-jpa:$queryDSL")
    compile("com.mysema.querydsl:querydsl-sql:$queryDSL")
    provided("com.mysema.querydsl:querydsl-apt:$queryDSL") {
        exclude group: 'com.google.guava'
    }
}

sourceSets {
    generated {
        java {
            srcDirs = ['src/main/generated']
        }
    }
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.provided
    options.compilerArgs = [
            "-proc:only",
            "-processor", "com.mysema.query.apt.jpa.JPAAnnotationProcessor"
    ]
    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
    dependsOn generateQueryDSL
    source generateQueryDSL.destinationDir
}

compileGeneratedJava {
    dependsOn generateQueryDSL
    options.warnings = false
    classpath += [ sourceSets.main.runtimeClasspath ]
}

clean {
    delete sourceSets.generated.java.srcDirs
}

idea {
    module {
        sourceDirs += [ file('src/main/generated') ]
    }
}